class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> answer;
        int n = nums.size();
        if(n < 4) return answer;
        if(n == 4){
            long long sum = (long long)nums[0] + nums[1] + nums[2] + nums[3];
            
            if(sum == target){
                answer.push_back({nums[0], nums[1], nums[2], nums[3]});
            }
            return answer;
        }

        for(int i = 0; i < n; i++){
            if(i > 0 && nums[i] == nums[i-1]) continue; //skip duplicates

            for(int j = i + 1; j < n; j++){
                if(j > i + 1 && nums[j] == nums[j-1]) continue; //skip duplicates

                int left = j + 1;
                int right = n - 1;

                while(left < right){
                long long sum = (long long)nums[i] + nums[j] + nums[left] + nums[right];

                if(sum == target){
                    answer.push_back({nums[i], nums[j], nums[left], nums[right]});

                    while(left < right && nums[left] == nums[left + 1]) left++;
                    while(left < right && nums[right] == nums[right - 1]) right--;

                    left++;
                    right--;
                }

                if(sum < target) left ++;
                if(sum > target) right--;
                }
            }
        }
        return answer;
    }
};
