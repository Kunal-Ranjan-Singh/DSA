class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        // sort(nums.begin(), nums.end());
        // int n = nums.size();
        // int count = 1;
        // int maj = n / 3;
        // vector<int> answer;

        // for(int i = 1; i < n; i++){
        //     if(nums[i] == nums[i - 1]){
        //         count++;
        //     } else {
        //         if(count > maj){
        //             answer.push_back(nums[i - 1]);
        //         }
        //         count = 1; // reset to 1 for the new element
        //     }
        // }

        // if(count > maj){ //check last group
        //     answer.push_back(nums[n - 1]);
        // }
        // return answer;

        vector<int> ans;
        int count1 = 0;
        int count2 = 0;
        int el1;
        int el2;
        for(int i = 0; i < nums.size(); i++){
            if(count1 == 0 && el2 != nums[i]){
                count1++;
                el1 = nums[i];
            }
            else if(count2 == 0 && el1 != nums[i]){
                count2++;
                el2 = nums[i];
            }
            else if(el1 == nums[i]){
                count1++;
            }
            else if(el2 == nums[i]){
                count2++;
            }
            else{
                count1--;
                count2--;
            }
        }
        count1 = 0;
        count2 = 0;
        for(int i = 0; i < nums.size(); i++){
            if(nums[i] == el1) count1++;
            else if(nums[i] == el2) count2++;
        }
        if(count1 > nums.size() / 3) ans.push_back(el1);
        if(count2 > nums.size() / 3) ans.push_back(el2);
        return ans;
    }
};
